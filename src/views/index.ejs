<html>
  <head>
  <title><%= title %></title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" type="text/css" href="css/style.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">

  </head>
  <body>
    <nav class="navbar navbar-dark bg-dark" style="">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">7JO - 주차공간 예약</a>
      </div>
    </nav>
    <main>
      <div class="d-flex flex-column flex-shrink-0 p-3 text-white bg-dark" style="width: 280px; height: 100%; position: fixed; z-index: 1; top: 56px; left: 0; margin-top:1px;">
        <hr>
        <ul class="nav nav-pills flex-column mb-auto">
          <li class="nav-item">
            <a href="#" class="nav-link active" aria-current="page">
              <svg class="bi me-2" width="16" height="16"><use xlink:href="#home"></use></svg>
              주차공간 지도
            </a>
          </li>
          <li>
            <a href="#" class="nav-link text-white">
              <svg class="bi me-2" width="16" height="16"><use xlink:href="#speedometer2"></use></svg>
              주차공간 목록 보기
            </a>
          </li>
          <li>
            <a href="#" class="nav-link text-white">
              <svg class="bi me-2" width="16" height="16"><use xlink:href="#table"></use></svg>
              결제내역
            </a>
          </li>
          <li>
            <a href="#" class="nav-link text-white">
              <svg class="bi me-2" width="16" height="16"><use xlink:href="#grid"></use></svg>
              이용내역
            </a>
          </li>
          <li>
            <a href="#" class="nav-link text-white">
              <svg class="bi me-2" width="16" height="16"><use xlink:href="#people-circle"></use></svg>
              판매자 메뉴
            </a>
          </li>
        </ul>
        <hr>
        <div class="dropdown">
          <a href="#" class="d-flex align-items-center text-white text-decoration-none dropdown-toggle" id="dropdownUser1" data-bs-toggle="dropdown" aria-expanded="false">
            <img src="https://github.com/mdo.png" alt="" width="32" height="32" class="rounded-circle me-2">
            <strong>mdo</strong>
          </a>
          <ul class="dropdown-menu dropdown-menu-dark text-small shadow" aria-labelledby="dropdownUser1">
            <li><a class="dropdown-item" href="#">New project...</a></li>
            <li><a class="dropdown-item" href="#">Settings</a></li>
            <li><a class="dropdown-item" href="#">Profile</a></li>
            <li><hr class="dropdown-divider"></li>
            <li><a class="dropdown-item" href="#">Sign out</a></li>
          </ul>
        </div>
      </div>
      <div id="map" style="left:280px;width:100%;height:100%;"></div>
    </main>

    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4" crossorigin="anonymous"></script>
    <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=7f7bc884a5d134611deb484e57e46a81"></script>
    <script>
      function makePoint(full = 0, lat, lang) {
        const color = full == 0 ? '#07eb3c' : '#FF0000';
        var circle = new kakao.maps.Circle({
          map: map, // 원을 표시할 지도 객체
          center : new kakao.maps.LatLng(lat, lang), // 지도의 중심 좌표
          radius : 10, // 원의 반지름 (단위 : m)
          fillColor: color, // 채움 색
          fillOpacity: 0.5, // 채움 불투명도
          strokeWeight: 3, // 선의 두께
          strokeColor: color, // 선 색
          strokeOpacity: 0.9, // 선 투명도 
          strokeStyle: 'solid' // 선 스타일
        });
        return circle;
      }
      var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
      var options = { //지도를 생성할 때 필요한 기본 옵션
        center: new kakao.maps.LatLng(33.45469994, 126.56520367), //지도의 중심좌표.
        level: 3 //지도의 레벨(확대, 축소 정도)
      };

      var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴

      var marker = new kakao.maps.Marker({
        position: map.getCenter(),
      })
      marker.setMap(map);

      for (let i = 0; i < 300; i += 1) {
        const latD = Math.random() / 100;
        const langD = Math.random() / 100;
        const sign1 = Math.random() < 0.5 ? -1 : 1;
        const sign2 = Math.random() < 0.5 ? -1 : 1;
        const lat = (33.45449994 + (sign1 * (latD)));
        const lang = (126.56420364 + (sign2 * (langD)));
        makePoint(0, lat, lang).setMap(map);
      }
      for (let i = 0; i < 100; i += 1) {
        const latD = Math.random() / 100;
        const langD = Math.random() / 100;
        const sign1 = Math.random() < 0.5 ? -1 : 1;
        const sign2 = Math.random() < 0.5 ? -1 : 1;
        const lat = (33.45449994 + (sign1 * (latD)));
        const lang = (126.56420364 + (sign2 * (langD)));
        makePoint(1, lat, lang).setMap(map);
      }
      map.relayout()

    </script>
  </body>
</html>
